#  ░██████╗░██╗░░░░░░█████╗░██████╗░░█████╗░██╗░░░░░  ██╗░░░██╗░█████╗░██████╗░░██████╗
#  ██╔════╝░██║░░░░░██╔══██╗██╔══██╗██╔══██╗██║░░░░░  ██║░░░██║██╔══██╗██╔══██╗██╔════╝
#  ██║░░██╗░██║░░░░░██║░░██║██████╦╝███████║██║░░░░░  ╚██╗░██╔╝███████║██████╔╝╚█████╗░
#  ██║░░╚██╗██║░░░░░██║░░██║██╔══██╗██╔══██║██║░░░░░  ░╚████╔╝░██╔══██║██╔══██╗░╚═══██╗
#  ╚██████╔╝███████╗╚█████╔╝██████╦╝██║░░██║███████╗  ░░╚██╔╝░░██║░░██║██║░░██║██████╔╝
#  ░╚═════╝░╚══════╝░╚════╝░╚═════╝░╚═╝░░╚═╝╚══════╝  ░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░

domain: ethpandaops.io
network_subdomain: "{{ ethereum_network_name }}.{{ domain }}"
server_fqdn: "{{ inventory_hostname }}.{{ network_subdomain }}"

ethereum_network_id: >-
  {{ (lookup('file', eth_testnet_config_local_dir_src + '/genesis.json') | from_json).config.chainId }}
ethereum_network_deposit_contract: >-
  {{ lookup('file', eth_testnet_config_local_dir_src + '/deposit_contract.txt') }}
ethereum_network_deposit_contract_block: >-
  {{ lookup('file', eth_testnet_config_local_dir_src + '/deposit_contract_block.txt') }}

ethereum_node_rcp_hostname: "rpc.{{ server_fqdn }}"
ethereum_node_beacon_hostname: "bn.{{ server_fqdn }}"

ethstats_url: "ethstats.{{ ethereum_network_name }}.{{ domain }}"
ethstats_secret: "{{ secret_ethstats }}"

### Checkpoint sync specific for Ansible & Kubernetes
checkpoint_sync_node: lighthouse-geth-1
ethereum_node_cl_checkpoint_sync_enabled: false
checkpoint_sync_url: https://checkpoint-sync.{{ ethereum_network_name }}.{{ domain }}
checkpoint_sync_url_kube: https://<path:/secrets/services/services.enc.yaml#ethereum | jsonPath {.testnets.pectra-devnets.node_ingress.combined}>@bn.{{ checkpoint_sync_node }}.{{ ethereum_network_name }}.{{ domain }}
#  ██████╗░░█████╗░██╗░░░░░███████╗  ██╗░░░██╗░█████╗░██████╗░░██████╗
#  ██╔══██╗██╔══██╗██║░░░░░██╔════╝  ██║░░░██║██╔══██╗██╔══██╗██╔════╝
#  ██████╔╝██║░░██║██║░░░░░█████╗░░  ╚██╗░██╔╝███████║██████╔╝╚█████╗░
#  ██╔══██╗██║░░██║██║░░░░░██╔══╝░░  ░╚████╔╝░██╔══██║██╔══██╗░╚═══██╗
#  ██║░░██║╚█████╔╝███████╗███████╗  ░░╚██╔╝░░██║░░██║██║░░██║██████╔╝
#  ╚═╝░░╚═╝░╚════╝░╚══════╝╚══════╝  ░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░

# role: ethpandaops.general.ethereum_genesis
ethereum_genesis_generator_container_image: "{{ default_tooling_images.ethereum_genesis_generator }}"
ethereum_genesis_generator_version: "{{ ethereum_genesis_generator_container_image.split(':')[-1] }}"
ethereum_genesis_network_seed: "/Users/parithosh/dev/eth2/pectra-devnets/ansible/inventories/devnet-6/inventory.ini"
ethereum_genesis_chain_id: "70{{ 99999999 | random(start=10000000, seed=ethereum_genesis_network_seed) }}"
ethereum_genesis_generator_output_dir: "../network-configs/{{ ethereum_network_name | replace('pectra-', '') }}"
ethereum_genesis_timestamp: "1738603800"
ethereum_genesis_timedelay: 60
ethereum_genesis_fork_version_suffix: "{{ 999999 | random(start=100000, seed=ethereum_genesis_network_seed) }}"
ethereum_genesis_timestamp_relative_cmd:
  Linux: "date +%s -d '+45 minutes'"
  Darwin: "date -v +45M +%s"
ethereum_genesis_mnemonic: "{{ secret_genesis_mnemonic }}"
ethereum_genesis_generator_config_files:
  cl/config.yaml: "{{ lookup('ansible.builtin.url', 'https://raw.githubusercontent.com/ethpandaops/ethereum-genesis-generator/v{{ethereum_genesis_generator_version}}/config-example/cl/config.yaml', split_lines=false) }}" # noqa yaml[line-length]
  cl/mnemonics.yaml: "{{ lookup('ansible.builtin.url', 'https://gist.githubusercontent.com/parithosh/cdebea40af6310fed209be1531cd8d00/raw/4062b71d2cf09c1c981ba8a1ed694539b9bf5346/genesis-template-mnemonic.yaml', split_lines=false) }}" # noqa yaml[line-length]
  el/genesis-config.yaml: "{{ lookup('ansible.builtin.url', 'https://raw.githubusercontent.com/ethpandaops/ethereum-genesis-generator/v{{ethereum_genesis_generator_version}}/config-example/el/genesis-config.yaml', split_lines=false) }}" # noqa yaml[line-length]
  values.env: |-
    export PRESET_BASE="mainnet"
    export CHAIN_ID="{{ ethereum_genesis_chain_id }}"
    export DEPOSIT_CONTRACT_ADDRESS="0x4242424242424242424242424242424242424242"
    export EL_AND_CL_MNEMONIC="{{ ethereum_genesis_mnemonic }}"
    export FOR_SHARING_EL_AND_CL_MNEMONIC="{{ for_sharing_el_cl_mnemonic }}"
    export CL_EXEC_BLOCK="0"
    export DEPOSIT_CONTRACT_BLOCK="0x0000000000000000000000000000000000000000000000000000000000000000"
    export NUMBER_OF_VALIDATORS=71000
    export GENESIS_FORK_VERSION="0x10{{ ethereum_genesis_fork_version_suffix }}"
    export ALTAIR_FORK_VERSION="0x20{{ ethereum_genesis_fork_version_suffix }}"
    export BELLATRIX_FORK_VERSION="0x30{{ ethereum_genesis_fork_version_suffix }}"
    export CAPELLA_FORK_VERSION="0x40{{ ethereum_genesis_fork_version_suffix }}"
    export DENEB_FORK_VERSION="0x50{{ ethereum_genesis_fork_version_suffix }}"
    export ELECTRA_FORK_VERSION="0x60{{ ethereum_genesis_fork_version_suffix }}"
    export ELECTRA_FORK_EPOCH="10"
    export FULU_FORK_VERSION="0x70{{ ethereum_genesis_fork_version_suffix }}"
    export FULU_FORK_EPOCH="999999"
    export WITHDRAWAL_TYPE="0x00"
    export WITHDRAWAL_ADDRESS={{ ethereum_genesis_validator_bls_change_execution_address }}
    export BEACON_STATIC_ENR=""
    export GENESIS_TIMESTAMP={{ ethereum_genesis_timestamp }}
    export GENESIS_DELAY={{ ethereum_genesis_timedelay }}
    export SLOT_DURATION_IN_SECONDS=12
    export MAX_PER_EPOCH_ACTIVATION_CHURN_LIMIT=8
    export CHURN_LIMIT_QUOTIENT=65536
    export EJECTION_BALANCE=16000000000
    export ETH1_FOLLOW_DISTANCE=2048
    export MIN_VALIDATOR_WITHDRAWABILITY_DELAY=2
    export SHARD_COMMITTEE_PERIOD=256
    export CHURN_LIMIT_QUOTIENT=128
ethereum_genesis_validator_keys_output_dir: "{{ ansible_inventory_sources[0] | dirname }}/files/validator_keys"
ethereum_genesis_validator_bls_change_execution_address: "{{ ethereum_node_cl_validator_fee_recipient }}"
ethereum_genesis_validator_keyranges: >-
  {%- set ns = namespace() -%}
  {%- set ns.ethereum_genesis_validator_keyranges = {} -%}
  {%- for host in groups['all'] -%}
  {%-   if hostvars[host].validator_start is defined and hostvars[host].validator_end is defined -%}
  {%-      set v = {'start':hostvars[host].validator_start, 'end': hostvars[host].validator_end } -%}
  {%-     set _ = ns.ethereum_genesis_validator_keyranges.update({host: v}) -%}
  {%-   endif -%}
  {%- endfor -%}
  {{ ns.ethereum_genesis_validator_keyranges }}

# role: ethpandaops.general.bootstrap
bootstrap_default_user_authorized_keys_plain:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDbboxOo0jyL3DNxqZ6UTEnZPEzPDPnujEYaClqNWSLWkphczHKAnJPkrwbAWB4JbJKjsAJ5kn53f10KPnUyZvJ5Jn8Rpf7RM7+56MYaBg84gVoA2KeIYxUa7h8neY7J61Galp0c6cOK+hp1lPsoiBSdCW/Rtbv6ALCcVe+4+uCW5FRoJcNRJfGRLRnjh1pw57HQw9O55mf319s4rVUq4umznQ0CciEx3rVMtXf4xjIZDZAhNpGaBh8AtHauaMZCOGociAIquYYqoSQnnmnOBiduRa5OkvGZomgybNQivlYboDeF6sQ71KVzRXSI+mxCYbSp246lqSdQtQsjFA54NYl/qWgAql0uqCqsZidW+XBjquyItRl2Rfzzy5Fk/gMOAJXHQYp4POfgFbqtxjWpfnuOKqW/1IGWcIt2g016effUqGgj/oePX0g+duFdszSKK773rJBySgafFF6XWNqagrLmE4LUGC+6P3oxzYTSFGeUVA21OayL+K40XPpJti5zns= # devops-eth2-shared"
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDWh9NW66VD4BPKETNyZeZrGN1f7G6dkihW3eAc7cbJPFQGIpnWc2tGq5o13vWW+SoCh16nkYM2oak+PJQxXYTiQnrMJSmSFd7E0DmdcoKadGJEnfosrH++aOZf/eVLe5q3E9NQFVSdOPo1MCRRTuZxPkuMxS6QikW3otWrA3F2vFgmYyki3Cy8huQzHKUZGicividYcUSFTydR2L0oWUNve3FyqMQQQPnfaJ1RvrkeGtdhRSAxa6L0jzgRK7fjpUyhKOofr7kCKARGELRRiB9QikRAoHU2/D/2jtJjKlTCJxArzXyDF2IcQCco+5Oe9x4c7Xch32dbscJSmjaAvsxRnu7GEFCS7b6kKGvwcoq5vJzvp3RBBR7Mosxv6pcM/q7Z4RhXOFVFFiPVl1dqkqSPkUrHwg8LtWOxC+GAl36vxhHLdDEV/RhbSAzO6SfYEWYGH1w7u4oiy2XAT2cNCO0j0tSHS5chX+d7TzwAbBE2HuPL84GVGHZG875hmiE+Dok= # github-actions-ci"
bootstrap_default_user_authorized_keys_github_all:
  - barnabasbusa
  - parithosh
  - samcm
  - savid
  - skylenet
  - pk910
  - marioevz
  - mattevans
bootstrap_default_user_authorized_keys_github: >
  {{
    (bootstrap_default_user_authorized_keys_github_all | default([])) +
    (bootstrap_default_user_authorized_keys_github_team_el | default([])) +
    (bootstrap_default_user_authorized_keys_github_team_cl | default([]))
  }}

# role: ethpandaops.general.ethereum_node
ethereum_node_images_always_pull: true
ethereum_node_metrics_exporter_enabled: true
ethereum_node_xatu_sentry_enabled: true
ethereum_node_cl_validator_enabled: "{{ validator_start is defined and validator_end is defined }}"
ethereum_node_cl_validator_fee_recipient: "0xf97e180c050e5Ab072211Ad2C213Eb5AEE4DF134"
ethereum_node_cl_ports_p2p_tcp: 9000
ethereum_node_cl_ports_p2p_udp: 9000
ethereum_node_cl_ports_http_beacon: 5052
ethereum_node_cl_ports_metrics: 5054
ethereum_node_el_ports_p2p_tcp: 30303
ethereum_node_el_ports_p2p_udp: 30303
ethereum_node_el_ports_http_rpc: 8545
ethereum_node_el_ports_ws_rpc: 8546
ethereum_node_el_ports_engine: 8551
ethereum_node_el_ports_metrics: 6060

ethereum_node_json_rpc_snooper_engine_enabled: true
ethereum_node_json_rpc_snooper_engine_port: 8561
ethereum_node_json_rpc_snooper_engine_name: "snooper-engine"
json_rpc_snooper_container_image: "{{ default_tooling_images.json_rpc_snooper }}"

# role: ethpandaops.general.xatu_sentry
xatu_sentry_container_image: "{{ default_tooling_images.xatu_sentry }}"
xatu_sentry_config_name: "{{ ethereum_network_name }}-{{ inventory_hostname }}"
xatu_sentry_config_server_address: "server.xatu.{{ ethereum_network_name }}.ethpandaops.io:80"
xatu_sentry_config_network_name_override: "{{ ethereum_network_name }}"
xatu_sentry_config: |
  logging: "info"
  metricsAddr: ":9090"
  name: "{{ xatu_sentry_config_name }}"
  ethereum:
    beaconNodeAddress: {{ xatu_sentry_config_beacon_uri }}
    overrideNetworkName: {{ xatu_sentry_config_network_name_override }}
    beaconSubscriptions:
    - attestation
    - block
    - head
    - chain_reorg
    - finalized_checkpoint
    - voluntary_exit
    - contribution_and_proof
    - blob_sidecar

  proposerDuty:
    enabled: true
  beaconCommittees:
    enabled: true

  outputs:
  - name: grpc
    type: xatu
    config:
      address: {{ xatu_sentry_config_server_address }}
      headers:
        Authorization: "{{ secret_xatu_event_ingester_secret }}"
      tls: false


# role: ethpandaops.general.ethereum_metrics_exporter
ethereum_metrics_exporter_container_image: "{{ default_tooling_images.ethereum_metrics_exporter }}"

# role: eth_testnet_config
eth_testnet_config_dir: /data/ethereum-network-config/metadata
eth_testnet_config_local_dir_enabled: true
eth_testnet_config_local_dir_src: "{{ ethereum_genesis_generator_output_dir }}/metadata/"

# role: ethpandaops.general.generate_kubernetes_config
gen_kubernetes_config_dora_frontend_rainbowkit_id: "15fe4ab4d5c0bcb6f0dc7c398301ff0e"

# role: gen_basic_auth_nginx
gen_basic_auth_nginx_name: "{{ secret_nginx_shared_basic_auth.name }}"
gen_basic_auth_nginx_password: "{{ secret_nginx_shared_basic_auth.password }}"
docker_nginx_proxy_container_image: "{{ default_tooling_images.nginx_proxy }}"
docker_nginx_proxy_docker_gen_container_image: "{{ default_tooling_images.nginx_proxy_gen }}"
docker_nginx_proxy_acme_companion_container_image: "{{ default_tooling_images.nginx_proxy_acme }}"

# role: ethpandaops.general.docker_nginx_proxy
docker_nginx_proxy_container_name: nginx-proxy
docker_nginx_proxy_default_email: "certs@{{ domain }}"
docker_nginx_proxy_docker_gen_container_name: nginx-proxy-gen
docker_nginx_proxy_docker_gen_container_env:
  RESOLVERS: "1.1.1.1"
docker_nginx_proxy_acme_companion_container_name: nginx-proxy-acme
docker_nginx_proxy_acme_companion_container_env:
  DEFAULT_EMAIL: "{{ docker_nginx_proxy_default_email }}"
  NGINX_PROXY_CONTAINER: "{{ docker_nginx_proxy_container_name }}"
  NGINX_DOCKER_GEN_CONTAINER: "{{ docker_nginx_proxy_docker_gen_container_name }}"
  ACME_CA_URI: https://acme.zerossl.com/v2/DV90
  ACME_EAB_KID: "{{ secret_zerossl.ACME_EAB_KID }}"
  ACME_EAB_HMAC_KEY: "{{ secret_zerossl.ACME_EAB_HMAC_KEY }}"
docker_nginx_proxy_container_networks: "{{ docker_networks_shared }}"
docker_nginx_proxy_docker_gen_container_networks: "{{ docker_networks_shared }}"
docker_nginx_proxy_acme_companion_container_networks: "{{ docker_networks_shared }}"
docker_nginx_proxy_datadir: /opt/nginx-proxy
docker_nginx_proxy_container_volumes:
  - "{{ docker_nginx_proxy_datadir }}/conf:/etc/nginx/conf.d"
  - "{{ docker_nginx_proxy_datadir }}/vhost:/etc/nginx/vhost.d"
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs:ro"
  - html:/usr/share/nginx/html
  - "{{ docker_nginx_proxy_datadir }}/htpasswd:/etc/nginx/htpasswd:ro"

# role: ethpandaops.general.prometheus
prometheus_container_image: "{{ default_tooling_images.prometheus }}"
node_exporter_container_image: "{{ default_tooling_images.node_exporter }}"

# role: ethpandaops.general.vector
vector_container_image: "{{ default_tooling_images.vector }}"
vector_config: |
  [sources.in]
    type = "docker_logs"
    exclude_containers = [
      "{{ vector_container_name }}",
      "ethereum-metrics-exporter",
      "nginx-proxy",
      "node_exporter",
      "prometheus",
      "snooper-",
    ]

  [sinks.out]
    type = "loki"
    inputs = ["in"]
    out_of_order_action = "accept"
    labels.forwarder = "vector"
    labels.instance = "{{ inventory_hostname }}"
    labels.network = "{{ ethereum_network_name }}"
    labels.testnet = "{{ ethereum_network_name }}"
    labels.ingress_user = "{{ secret_loki.username }}"
    labels.container_name = "{{ '{{ container_name }}' }}"
  {%- if ethereum_node_el is defined +%}
    labels.ethereum_el = "{{ ethereum_node_el }}"
  {%- endif +%}
  {%- if ethereum_node_cl is defined +%}
    labels.ethereum_cl = "{{ ethereum_node_cl }}"
  {%- endif +%}
    encoding.codec = "json"
    endpoint = "{{ secret_loki.endpoint }}"
    auth.strategy = "basic"
    auth.user = "{{ secret_loki.username }}"
    auth.password = "{{ secret_loki.password }}"
